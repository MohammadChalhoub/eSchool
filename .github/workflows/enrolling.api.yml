name: Enrolling.API

on:
  push:
    paths:
      - "src/Services/Enrolling/**"
      - ".github/workflows/enrolling.api.yml"
      - "src/Libraries/OpenTelemetry/**"
      - "eSchool.sln"
      - "build/dotnet/**"
      - "src/Directory.Build.props"
      - "docker-compose.yml"
      - "docker-compose.override.yml"
      - "docker-compose.dcproj"
      - "docker-compose-test.yml"
      - "docker-compose-test.override.yml"
  pull_request:
    paths:
      - "src/Services/Enrolling/**"
      - ".github/workflows/enrolling.api.yml"
      - "src/Libraries/OpenTelemetry/**"
      - "eSchool.sln"
      - "build/dotnet/**"
      - "src/Directory.Build.props"
      - "docker-compose.yml"
      - "docker-compose.override.yml"
      - "docker-compose.dcproj"
      - "docker-compose-test.yml"
      - "docker-compose-test.override.yml"

jobs:
  Build:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v1

      - name: set image tag
        run: |
          TAG=$(git tag --points-at HEAD)
          if [ -z "$TAG" ]; then
            TAG=$(git rev-parse --short HEAD)
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: build
        run: docker-compose build enrolling.api

  # UnitTests:
  #   runs-on: ubuntu-latest

  #   needs: Build

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: set image tag
  #       run: echo "TAG=$(git tag --points-at HEAD | cut -c 2-4)" >> $GITHUB_ENV


  #     - name: build
  #       run: docker-compose -f docker-compose-test.yml -f docker-compose-test.override.yml build enrolling.api.test

  #     - name: run tests
  #       run: docker-compose -f docker-compose-test.yml -f docker-compose-test.override.yml run enrolling.api.test
        
  # FunctionalTests:
  #   runs-on: ubuntu-latest

  #   needs: Build

  #   steps:
  #     - uses: actions/checkout@v2

  #     - name: set image tag
  #       run: echo "TAG=$(git tag --points-at HEAD | cut -c 2-4)" >> $GITHUB_ENV

  #     - name: build
  #       run: docker-compose -f docker-compose-test.yml -f docker-compose-test.override.yml build enrolling.api.functional-test

  #     - name: run tests
  #       run: docker-compose -f docker-compose-test.yml -f docker-compose-test.override.yml run enrolling.api.functional-test
        
  # StaticCodeAnalysis:
  #   name: CodeQL Analysis
  #   runs-on: ubuntu-latest
  #   needs: [UnitTests, FunctionalTests]
  #   strategy:
  #     matrix:
  #       language: ['csharp']
  #   steps:
  #     - name: Checkout repository
  #       uses: actions/checkout@v2

  #     - uses: actions/setup-dotnet@v1
  #       with:
  #         dotnet-version: '6.0.x'
  #         include-prerelease: true

  #     - name: Initialize CodeQL
  #       uses: github/codeql-action/init@v1
  #       with:
  #         languages: ${{ matrix.language }}

  #     - name: Autobuild
  #       uses: github/codeql-action/autobuild@v1

  #     - name: Perform CodeQL Analysis
  #       uses: github/codeql-action/analyze@v1
        
  DockerPush:
    runs-on: ubuntu-latest
    needs: [Build]
    steps:
      - uses: actions/checkout@v2

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_HUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}

      - name: set image tag
        run: |
          TAG=$(git tag --points-at HEAD)
          if [ -z "$TAG" ]; then
            TAG=$(git rev-parse --short HEAD)
          fi
          echo "TAG=$TAG" >> $GITHUB_ENV

      - name: Print TAG value
        run: echo "TAG value is ${{ env.TAG }}"

      - name: Build and push Docker image
        uses: docker/build-push-action@v2
        with:
          context: .
          file: ./src/Services/Enrolling/Enrolling.API/Dockerfile
          push: true
          tags: mohammadchalhoub/enrolling.api:${{ env.TAG }}

      - name: Run Docker container for testing
        run: |
          docker run -d --name test-container mohammadchalhoub/enrolling.api:${{ env.TAG }}
          docker ps -a
          docker logs test-container
          
  Deploy:
    runs-on: ubuntu-latest
    needs: DockerPush
    steps:
      - uses: actions/checkout@v2

      - name: Set up SSH
        run: |
          mkdir -p ~/.ssh
          echo "${{ secrets.EC2_SSH_KEY }}" > ~/.ssh/id_rsa
          chmod 600 ~/.ssh/id_rsa
          ssh-keyscan -H ${{ secrets.HOST }} > ~/.ssh/known_hosts

      - name: Deploy to EC2
        env:
          TAG: ${{ env.TAG }}
        run: |
          ssh -o StrictHostKeyChecking=no -i ~/.ssh/id_rsa ec2-user@${{ secrets.HOST }} "
            docker pull mohammadchalhoub/enrolling.api:$TAG &&
            docker stop myapp || true &&
            docker rm myapp || true &&
            docker run -d --name myapp -p 80:80 mohammadchalhoub/enrolling.api:$TAG
          "

